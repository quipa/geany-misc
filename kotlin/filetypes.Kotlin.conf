# This code allow you to add support for a new language in Geany
# In this case for Kotlin
# For complete documentation of this file, please see Geany's main documentation

[styling=C]

[keywords]
# Based on https://kotlinlang.org/docs/reference/keyword-reference.html
# all items must be in one line
primary=as as? break class continue do else false for fun if in !in interface is !is null object package return super this throw true try typealias typeof val var when while by catch constructor delegate dynamic field file finally get import init param property receiver set setparam where actual abstract annotation companion const crossinline data enum expect external final infix inline inner internal lateinit noinline open operator out override private protected public reified sealed suspend tailrec vararg field it
# https://kotlinlang.org/docs/reference/basic-types.html
secondary=Any Unit Nothing Byte Short Int Long Double Float Boolean Char String Array BooleanArray ByteArray ShortArray IntArray LongArray FloatArray DoubleArray CharArray Pair List Set Map MutableList MutableSet MutableMap Sequence Iterable
# these are the Doxygen keywords
doccomment=
typedefs=

[lexer_properties=C]

[settings]
lexer_filetype=Java
tag_parser=Java
# default extension used when saving files
extension=kt

# MIME type
mime_type=text/x-kotlin

# the following characters are these which a "word" can contains, see documentation
# wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# single comments, like # in this file
comment_single=//
# multiline comments
comment_open=/*
comment_close=*/

# set to false if a comment character/string should start at column 0 of a line, true uses any
# indentation of the line, e.g. setting to true causes the following on pressing CTRL+d
	#command_example();
# setting to false would generate this
#	command_example();
# This setting works only for single line comments
comment_use_indent=true

# context action command (please see Geany's main documentation for details)
context_action_cmd=

[indentation]
width=4
# 0 is spaces, 1 is tabs, 2 is tab & spaces
type=0

[build-menu]
# %f will be replaced by the complete filename
# %e will be replaced by the filename without extension
# (use only one of it at one time)
FT_00_LB=_Compile
FT_00_CM=kotlinc "%f" -include-runtime -d "%e".jar
FT_00_WD=
EX_00_LB=_Execute
EX_00_CM=java -jar "%e".jar
EX_00_WD=
EX_01_LB=Script
EX_01_CM=kotlinc -script "%f"
EX_01_WD=
FT_01_LB=
FT_01_CM=
FT_01_WD=

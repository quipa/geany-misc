# For complete documentation of this file, please see Geany's main documentation
[styling=C]

[keywords]
primary=abstract as assert async await break case catch class const continue covariant default deferred do dynamic else enum export extends extension external factory false final finally for Function get hide if implements import in interface is late library mixin new null on operator part required rethrow return set show static super switch sync this throw true try typedef var void while with yield
secondary=int double num String bool List Map
# doccomment=author deprecated exception param return see serial serialData serialField since throws todo version
typedefs=

[lexer_properties=C]

[settings]
lexer_filetype=Java
tag_parser=Java
# default extension used when saving files
extension=dart

# MIME type
#mime_type=text/x-java

# the following characters are these which a "word" can contains, see documentation
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# single comments, like # in this file
# /// dart doc comment
comment_single=//
# multiline comments
comment_open=/*
comment_close=*/

# set to false if a comment character/string should start at column 0 of a line, true uses any
# indentation of the line, e.g. setting to true causes the following on pressing CTRL+d
	#command_example();
# setting to false would generate this
#	command_example();
# This setting works only for single line comments
comment_use_indent=true

# context action command (please see Geany's main documentation for details)
context_action_cmd=

[indentation]
width=2
# 0 is spaces, 1 is tabs, 2 is tab & spaces
type=1

[build-menu]
FT_00_LB=_Compile
FT_00_CM=dart compile "%f"
FT_00_WD=
FT_01_LB=_Run
FT_01_CM=dart run "%f"
FT_01_WD=
EX_00_LB=_Execute
EX_00_CM="./%e"
EX_00_WD=
#error_regex=^([^:]+):([0-9]+):

#[build_settings]
# %f will be replaced by the complete filename
# %e will be replaced by the filename without extension
# (use only one of it at one time)
#compiler=dart compile "%f"
#run_cmd=dart run "%f"
